<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>12.3</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-28T15:13:58.416Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>12.3</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>axios拦截器</title>
    <link href="http://yoursite.com/2020/06/27/axios%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    <id>http://yoursite.com/2020/06/27/axios%E6%8B%A6%E6%88%AA%E5%99%A8/</id>
    <published>2020-06-27T12:40:10.593Z</published>
    <updated>2020-06-28T15:13:58.416Z</updated>
    
    <content type="html"><![CDATA[<h2 id="请求拦截器"><a href="#请求拦截器" class="headerlink" title="请求拦截器"></a>请求拦截器</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> inc = axios.interceptors.request.use(</span><br><span class="line">    config=&gt;&#123;</span><br><span class="line">        <span class="comment">//发送请求之前做些什么</span></span><br><span class="line">        <span class="keyword">return</span> config</span><br><span class="line">    &#125;,</span><br><span class="line">    err=&gt;&#123;</span><br><span class="line">        <span class="comment">//请求错误时做些什么</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(err)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><br/><h2 id="响应拦截器"><a href="#响应拦截器" class="headerlink" title="响应拦截器"></a>响应拦截器</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> inc = axios.interceptors.response.use(</span><br><span class="line">    response=&gt;&#123;</span><br><span class="line">        <span class="comment">//请求成功之后做些什么</span></span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line">    &#125;,</span><br><span class="line">    err=&gt;&#123;</span><br><span class="line">        <span class="comment">//请求失败做些什么</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(err)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><br/><h2 id="取消拦截器的方法"><a href="#取消拦截器的方法" class="headerlink" title="取消拦截器的方法"></a>取消拦截器的方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axios.interceptors.request.eject(inc)</span><br></pre></td></tr></table></figure><br/>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;请求拦截器&quot;&gt;&lt;a href=&quot;#请求拦截器&quot; class=&quot;headerlink&quot; title=&quot;请求拦截器&quot;&gt;&lt;/a&gt;请求拦截器&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>vue中axios方法的基本使用</title>
    <link href="http://yoursite.com/2020/06/17/vue%E4%B8%ADaxios%E6%96%B9%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2020/06/17/vue%E4%B8%ADaxios%E6%96%B9%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</id>
    <published>2020-06-17T07:27:12.000Z</published>
    <updated>2020-06-25T16:31:02.532Z</updated>
    
    <content type="html"><![CDATA[<h2 id="get-post-put-patch-delete"><a href="#get-post-put-patch-delete" class="headerlink" title="get,post,put,patch,delete"></a>get,post,put,patch,delete</h2><p><strong>get:</strong> 获取数据<br><strong>post:</strong> 提交数据<br><strong>put:</strong> 更新数据<br><strong>patch:</strong> 更新数据<br><strong>delete:</strong> 删除数据</p><h3 id="put和patch的区别"><a href="#put和patch的区别" class="headerlink" title="put和patch的区别"></a>put和patch的区别</h3><p>put会把所有的数据都推送到服务端，而patch只将修改的数据推送到服务端<br><br/></p><h2 id="vue项目中引入axios"><a href="#vue项目中引入axios" class="headerlink" title="vue项目中引入axios"></a>vue项目中引入axios</h2><h3 id="一、安装axios"><a href="#一、安装axios" class="headerlink" title="一、安装axios"></a>一、安装axios</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install axios --save</span><br></pre></td></tr></table></figure><br/><h3 id="二、引入axios"><a href="#二、引入axios" class="headerlink" title="二、引入axios"></a>二、引入axios</h3><p>在需要的vue文件中引入axios</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br></pre></td></tr></table></figure><br/><h2 id="使用axios"><a href="#使用axios" class="headerlink" title="使用axios"></a>使用axios</h2><h3 id="发送一个GET请求"><a href="#发送一个GET请求" class="headerlink" title="发送一个GET请求"></a>发送一个GET请求</h3><p>axios封装了get方法，传入请求地址和请求参数，参数需要写在params属性下。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> url = <span class="string">'...'</span></span><br><span class="line"></span><br><span class="line">axios.get(url, &#123;</span><br><span class="line">  params:&#123;</span><br><span class="line">    id:<span class="number">12</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(res) <span class="comment">//返回的数据</span></span><br><span class="line">&#125;)</span><br><span class="line">.catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;  </span><br><span class="line">  <span class="built_in">console</span>.log(err) <span class="comment">//错误信息</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><br/><h3 id="发送一个POST请求"><a href="#发送一个POST请求" class="headerlink" title="发送一个POST请求"></a>发送一个POST请求</h3><p>post常用的data格式有两种：一种是form-data(表单提交，一般用于图片上传和文件上传),另一种是applicition/json。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//applicition/json</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> url = <span class="string">'...'</span></span><br><span class="line">    <span class="keyword">let</span> data = &#123;</span><br><span class="line">        id: <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    axios.post(url, data).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//form-data</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> url = <span class="string">'...'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> data = &#123;</span><br><span class="line">        id: <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> fd = <span class="keyword">new</span> FormData()</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> data)&#123;</span><br><span class="line">        fd.append(key, data[key])</span><br><span class="line">    &#125;</span><br><span class="line">    axios.post(url, fd).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><br/><h2 id="发送一个delete请求"><a href="#发送一个delete请求" class="headerlink" title="发送一个delete请求"></a>发送一个delete请求</h2><p>delete有的时候需要将参数拼接到url上,而有的时候需要放在请求体里面<br>将参数写在params就是将参数拼接在url上，将参数写在data属性下就是将参数放在请求体里。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将参数拼到url</span></span><br><span class="line"> axios.delete(<span class="string">'/delete'</span>,&#123;</span><br><span class="line">   params:&#123;</span><br><span class="line">     id: <span class="number">1</span></span><br><span class="line">   &#125;</span><br><span class="line"> &#125;).then(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(res)</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将参数放在请求体</span></span><br><span class="line"> axios.delete(<span class="string">'/delete'</span>,&#123;</span><br><span class="line">   data:&#123;</span><br><span class="line">     id: <span class="number">1</span></span><br><span class="line">   &#125;</span><br><span class="line"> &#125;).then(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(res)</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><br/><h2 id="另外一种写法"><a href="#另外一种写法" class="headerlink" title="另外一种写法"></a>另外一种写法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//get请求</span></span><br><span class="line">    axios(&#123;</span><br><span class="line">        method:<span class="string">'get'</span>,</span><br><span class="line">        url:<span class="string">'...'</span>,</span><br><span class="line">        params:&#123;</span><br><span class="line">          id: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//post请求</span></span><br><span class="line">    <span class="keyword">let</span> data = &#123;</span><br><span class="line">        id: <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    axios(&#123;</span><br><span class="line">        method: <span class="string">'post'</span>,</span><br><span class="line">        url: <span class="string">'..'</span>,</span><br><span class="line">        data: data</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//delete请求</span></span><br><span class="line">    axios(&#123;</span><br><span class="line">        method: <span class="string">'delete'</span>,</span><br><span class="line">        url: <span class="string">'/delete'</span>,</span><br><span class="line">        params:&#123;<span class="attr">id</span>:<span class="number">12</span>&#125;,  <span class="comment">//参数拼接在url</span></span><br><span class="line">        data:&#123;<span class="attr">id</span>:<span class="number">12</span>&#125;     <span class="comment">//参数放在请求体</span></span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><br/><h2 id="并发请求"><a href="#并发请求" class="headerlink" title="并发请求"></a>并发请求</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">axios.all(</span><br><span class="line">    [</span><br><span class="line">        axios.get(<span class="string">'...1.json'</span>),</span><br><span class="line">        axios.get(<span class="string">'...2.json'</span>)</span><br><span class="line">    ]</span><br><span class="line">).then(</span><br><span class="line">    axios.spread(<span class="function">(<span class="params">dataRes, cityRes</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(dataRes,cityRes)</span><br><span class="line">    &#125;)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>axios.all()是一个数组，数组里面的值是一个一个的axios请求。<br>axios.spread()的作用分割不同请求的返回值，然后对这些返回值进行处理。<br>axios.spread()的参数是一个回调函数，axios.all()中有几个axios请求，与之对应spread()的回调函数中就要写几个参数用来存放请求的返回值。<br><br/><br><br/><br><br/></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;get-post-put-patch-delete&quot;&gt;&lt;a href=&quot;#get-post-put-patch-delete&quot; class=&quot;headerlink&quot; title=&quot;get,post,put,patch,delete&quot;&gt;&lt;/a&gt;get,post,pu
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>我成功了</title>
    <link href="http://yoursite.com/2020/06/09/%E6%88%91%E6%88%90%E5%8A%9F%E4%BA%86/"/>
    <id>http://yoursite.com/2020/06/09/%E6%88%91%E6%88%90%E5%8A%9F%E4%BA%86/</id>
    <published>2020-06-09T03:58:30.409Z</published>
    <updated>2020-06-08T17:19:58.820Z</updated>
    
    <content type="html"><![CDATA[<!-- ---title: 我成功了date: 2020-06-09 00:11:12tags:-- --><!-- ## 我成功了 --><p>赞美太阳！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- ---
title: 我成功了
date: 2020-06-09 00:11:12
tags:
-- --&gt;

&lt;!-- ## 我成功了 --&gt;

&lt;p&gt;赞美太阳！&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
</feed>
